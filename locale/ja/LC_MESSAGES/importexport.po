# SOME DESCRIPTIVE TITLE.
# Copyright (C) Parametric Products Intellectual Holdings LLC, All Rights Reserved
# This file is distributed under the same license as the CadQuery package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Tetsuo Koyama <tkoyama010@gmail.com>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CadQuery 2.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-16 00:03+0000\n"
"PO-Revision-Date: 2021-05-27 10:38+0000\n"
"Last-Translator: Tetsuo Koyama <tkoyama010@gmail.com>, 2021\n"
"Language-Team: Japanese (https://app.transifex.com/tkoyama010/teams/121077/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../cadquery/doc/importexport.rst:6
msgid "Importing and Exporting Files"
msgstr ""

#: ../../cadquery/doc/importexport.rst:9
msgid "Introduction"
msgstr "はじめに"

#: ../../cadquery/doc/importexport.rst:11
msgid ""
"The purpose of this section is to explain how to import external file "
"formats into CadQuery, and export files from it as well. While the external "
"file formats can be used to interchange CAD model data with other software, "
"CadQuery does not support any formats that carry parametric data with them "
"at this time. The only format that is fully parametric is CadQuery's own "
"Python format. Below are lists of the import and export file formats that "
"CadQuery supports."
msgstr ""

#: ../../cadquery/doc/importexport.rst:18
msgid "Import Formats"
msgstr ""

#: ../../cadquery/doc/importexport.rst:20
#: ../../cadquery/doc/importexport.rst:26
msgid "DXF"
msgstr ""

#: ../../cadquery/doc/importexport.rst:21
#: ../../cadquery/doc/importexport.rst:28
msgid "STEP"
msgstr ""

#: ../../cadquery/doc/importexport.rst:24
msgid "Export Formats"
msgstr ""

#: ../../cadquery/doc/importexport.rst:27
msgid "SVG"
msgstr ""

#: ../../cadquery/doc/importexport.rst:29
msgid "STL"
msgstr ""

#: ../../cadquery/doc/importexport.rst:30
msgid "AMF"
msgstr ""

#: ../../cadquery/doc/importexport.rst:31
msgid "TJS"
msgstr ""

#: ../../cadquery/doc/importexport.rst:32
msgid "VRML"
msgstr ""

#: ../../cadquery/doc/importexport.rst:33
msgid "VTP"
msgstr ""

#: ../../cadquery/doc/importexport.rst:34
msgid "3MF"
msgstr ""

#: ../../cadquery/doc/importexport.rst:35
msgid "glTF"
msgstr ""

#: ../../cadquery/doc/importexport.rst:38
msgid "Notes on the Formats"
msgstr ""

#: ../../cadquery/doc/importexport.rst:40
msgid ""
"DXF is useful for importing complex 2D profiles that would be tedious to "
"create using CadQuery's 2D operations. An example is that the 2D profiles of"
" aluminum extrusion are often provided in DXF format. These can be imported "
"and extruded to create the length of extrusion that is needed in a design."
msgstr ""

#: ../../cadquery/doc/importexport.rst:41
msgid ""
"STEP files are useful for interchanging model data with other CAD and "
"analysis systems, such as FreeCAD. Many parts such as screws have STEP files"
" available, which can be imported and used in CadQuery assemblies."
msgstr ""

#: ../../cadquery/doc/importexport.rst:42
msgid ""
"STL, AMF and 3MF files are mesh-based formats which are typically used in "
"additive manufacturing (i.e. 3D printing). AMF and 3MF files support more "
"features, but are not as universally supported as STL files."
msgstr ""

#: ../../cadquery/doc/importexport.rst:43
msgid ""
"TJS is short for ThreeJS, and is a JSON mesh format that is useful for "
"displaying 3D models in web browsers. The TJS format is used to display "
"embedded 3D examples within the CadQuery documentation."
msgstr ""

#: ../../cadquery/doc/importexport.rst:44
msgid ""
"VRML is a mesh-based format for representing interactive 3D objects in a web"
" browser."
msgstr ""

#: ../../cadquery/doc/importexport.rst:45
msgid "VTP is a mesh-based format used by the VTK library."
msgstr ""

#: ../../cadquery/doc/importexport.rst:46
msgid ""
"glTF is a mesh-based format useful for viewing models on the web. Whether "
"the resulting glTF file is binary (.glb) or text (.gltf) is set by the file "
"extension."
msgstr ""

#: ../../cadquery/doc/importexport.rst:49
msgid "Importing DXF"
msgstr ""

#: ../../cadquery/doc/importexport.rst:51
msgid ""
"DXF files can be imported using the :meth:`importers.importDXF` method."
msgstr ""

#: ../../cadquery/cadquery/occ_impl/importers/__init__.pydocstring of
#: cadquery.occ_impl.importers.importDXF:1
msgid "Loads a DXF file into a Workplane."
msgstr ""

#: ../../cadquery/cadquery/occ_impl/importers/__init__.pydocstring of
#: cadquery.occ_impl.importers.importDXF:3
msgid ""
"All layers are imported by default.  Provide a layer include or exclude list"
" to select layers.  Layer names are handled as case-insensitive."
msgstr ""

#: ../../cadquery/cadquery/occ_impl/importers/__init__.pydocstring of
#: cadquery.occ_impl.importers.importDXF:0
#: ../../cadquery/cadquery/occ_impl/shapes.pydocstring of
#: cadquery.occ_impl.shapes.Shape.exportStl:0
msgid "Parameters"
msgstr ""

#: ../../cadquery/cadquery/occ_impl/importers/__init__.pydocstring of
#: cadquery.occ_impl.importers.importDXF:6
msgid "The path and name of the DXF file to be imported"
msgstr ""

#: ../../cadquery/cadquery/occ_impl/importers/__init__.pydocstring of
#: cadquery.occ_impl.importers.importDXF:7
msgid "The tolerance used for merging edges into wires"
msgstr ""

#: ../../cadquery/cadquery/occ_impl/importers/__init__.pydocstring of
#: cadquery.occ_impl.importers.importDXF:8
msgid "a list of layer names not to import"
msgstr ""

#: ../../cadquery/cadquery/occ_impl/importers/__init__.pydocstring of
#: cadquery.occ_impl.importers.importDXF:9
msgid "a list of layer names to import"
msgstr ""

#: ../../cadquery/cadquery/occ_impl/importers/__init__.pydocstring of
#: cadquery.occ_impl.importers.importDXF:0
#: ../../cadquery/cadquery/occ_impl/shapes.pydocstring of
#: cadquery.occ_impl.shapes.Shape.exportStl:0
msgid "Return type"
msgstr ""

#: ../../cadquery/doc/importexport.rst:56
msgid ""
"Importing a DXF profile with default settings and using it within a CadQuery"
" script is shown in the following code."
msgstr ""

#: ../../cadquery/doc/importexport.rst:66
msgid ""
"Note the use of the :meth:`Workplane.wires` and :meth:`Workplane.toPending` "
"methods to make the DXF profile ready for use during subsequent operations. "
"Calling ``toPending()`` tells CadQuery to make the edges/wires available to "
"the next modelling operation that is called in the chain."
msgstr ""

#: ../../cadquery/doc/importexport.rst:71
msgid "Importing STEP"
msgstr ""

#: ../../cadquery/doc/importexport.rst:73
msgid ""
"STEP files can be imported using the :meth:`importers.importStep` method "
"(note the capitalization of \"Step\"). There are no parameters for this "
"method other than the file path to import."
msgstr ""

#: ../../cadquery/doc/importexport.rst:83
msgid "Exporting STEP"
msgstr ""

#: ../../cadquery/doc/importexport.rst:85
msgid ""
"This section covers exporting CadQuery Workplane objects to STEP. For "
"exporting assemblies to STEP, see the next section."
msgstr ""

#: ../../cadquery/doc/importexport.rst:88
#: ../../cadquery/doc/importexport.rst:145
msgid "Default"
msgstr ""

#: ../../cadquery/doc/importexport.rst:90
msgid ""
"The exporters module handles exporting Workplane objects to STEP. It is not "
"necessary to set the export type explicitly since it will be determined from"
" the file extension. Below is an example."
msgstr ""

#: ../../cadquery/doc/importexport.rst:102
msgid "Non-Default File Extensions"
msgstr ""

#: ../../cadquery/doc/importexport.rst:104
msgid ""
"If there is a requirement to export the STEP file using an \"stp\" "
"extension, CadQuery will throw an error saying that it does not recognize "
"the file extension. In that case the export type has to be specified."
msgstr ""

#: ../../cadquery/doc/importexport.rst:119
msgid "Setting Extra Options"
msgstr ""

#: ../../cadquery/doc/importexport.rst:121
msgid ""
"There are additional options that can be set when exporting an object to a "
"STEP file. For an explanation of the options available, see the "
"documentation of the :meth:`Shape.exportStep` method or the "
":meth:`Assembly.exportAssembly`` method."
msgstr ""

#: ../../cadquery/doc/importexport.rst:138
msgid "Exporting Assemblies to STEP"
msgstr ""

#: ../../cadquery/doc/importexport.rst:140
msgid ""
"It is possible to export CadQuery assemblies directly to STEP. The STEP "
"exporter has multiple options which change the way exported STEP files will "
"appear and operate when opened in other CAD programs. All assembly export "
"methods shown here will preserve the color information from the assembly."
msgstr ""

#: ../../cadquery/doc/importexport.rst:147
msgid ""
"CadQuery assemblies have a :meth:`Assembly.save` method which can write an "
"assembly to a STEP file. An example assembly export with all defaults is "
"shown below."
msgstr ""

#: ../../cadquery/doc/importexport.rst:164
msgid ""
"This will produce a STEP file that is nested with auto-generated object "
"names. The colors of each assembly object will be preserved, but the names "
"that were set for each will not."
msgstr ""

#: ../../cadquery/doc/importexport.rst:168
msgid "Fused"
msgstr ""

#: ../../cadquery/doc/importexport.rst:170
msgid ""
"The following will attempt to create a single, fused shape while preserving "
"the name and color information of each assembly object. The process of "
"fusing the solid may cause performance issues in some cases, and is likely "
"to alter the faces of the fused solids."
msgstr ""

#: ../../cadquery/doc/importexport.rst:192
msgid "Naming"
msgstr ""

#: ../../cadquery/doc/importexport.rst:194
msgid ""
"It is also possible to set the name of the top level assembly object in the "
"STEP file with either the DEFAULT or FUSED methods. This is done by setting "
"the name property of the assembly before calling :meth:`Assembly.save`."
msgstr ""

#: ../../cadquery/doc/importexport.rst:206
msgid ""
"If an assembly name is not specified, a UUID will be used to avoid name "
"conflicts."
msgstr ""

#: ../../cadquery/doc/importexport.rst:209
msgid "Exporting SVG"
msgstr ""

#: ../../cadquery/doc/importexport.rst:211
msgid ""
"The SVG exporter has several options which can be useful for achieving the "
"desired final output. Those options are as follows."
msgstr ""

#: ../../cadquery/doc/importexport.rst:214
msgid "*width* - Width of the resulting image (None to fit based on height)."
msgstr ""

#: ../../cadquery/doc/importexport.rst:215
msgid "*height* - Height of the resulting image (None to fit based on width)."
msgstr ""

#: ../../cadquery/doc/importexport.rst:216
msgid "*marginLeft* - Inset margin from the left side of the document."
msgstr ""

#: ../../cadquery/doc/importexport.rst:217
msgid "*marginTop* - Inset margin from the top side of the document."
msgstr ""

#: ../../cadquery/doc/importexport.rst:218
msgid "*projectionDir* - Direction the camera will view the shape from."
msgstr ""

#: ../../cadquery/doc/importexport.rst:219
msgid ""
"*showAxes* - Whether or not to show the axes indicator, which will only be "
"visible when the projectionDir is also at the default."
msgstr ""

#: ../../cadquery/doc/importexport.rst:220
msgid "*strokeWidth* - Width of the line that visible edges are drawn with."
msgstr ""

#: ../../cadquery/doc/importexport.rst:221
msgid "*strokeColor* - Color of the line that visible edges are drawn with."
msgstr ""

#: ../../cadquery/doc/importexport.rst:222
msgid "*hiddenColor* - Color of the line that hidden edges are drawn with."
msgstr ""

#: ../../cadquery/doc/importexport.rst:223
msgid "*showHidden* - Whether or not to show hidden lines."
msgstr ""

#: ../../cadquery/doc/importexport.rst:224
msgid ""
"*focus* - If specified, creates a perspective SVG with the projector at the "
"distance specified."
msgstr ""

#: ../../cadquery/doc/importexport.rst:226
msgid ""
"The options are passed to the exporter in a dictionary, and can be left out "
"to force the SVG to be created with default options. Below are examples with"
" and without options set."
msgstr ""

#: ../../cadquery/doc/importexport.rst:229
msgid "Without options:"
msgstr ""

#: ../../cadquery/doc/importexport.rst:240
msgid "Results in:"
msgstr ""

#: ../../cadquery/doc/importexport.rst:244
msgid ""
"Note that the exporters API figured out the format type from the file "
"extension. The format type can be set explicitly by using "
":py:class:`exporters.ExportTypes`."
msgstr ""

#: ../../cadquery/doc/importexport.rst:247
msgid ""
"The following is an example of using options to alter the resulting SVG "
"output by passing in the ``opt`` parameter."
msgstr ""

#: ../../cadquery/doc/importexport.rst:273
msgid "Which results in the following image:"
msgstr ""

#: ../../cadquery/doc/importexport.rst:277
msgid ""
"Exporting with the additional option ``\"focus\": 25`` results in the "
"following output SVG with perspective:"
msgstr ""

#: ../../cadquery/doc/importexport.rst:282
msgid "Exporting STL"
msgstr ""

#: ../../cadquery/doc/importexport.rst:284
msgid ""
"The STL exporter is capable of adjusting the quality of the resulting mesh, "
"and accepts the following parameters."
msgstr ""

#: ../../cadquery/cadquery/occ_impl/shapes.pydocstring of
#: cadquery.occ_impl.shapes.Shape.exportStl:1
msgid "Exports a shape to a specified STL file."
msgstr ""

#: ../../cadquery/cadquery/occ_impl/shapes.pydocstring of
#: cadquery.occ_impl.shapes.Shape.exportStl:3
msgid "The path and file name to write the STL output to."
msgstr ""

#: ../../cadquery/cadquery/occ_impl/shapes.pydocstring of
#: cadquery.occ_impl.shapes.Shape.exportStl:4
msgid ""
"A linear deflection setting which limits the distance between a curve and "
"its tessellation. Setting this value too low will result in large meshes "
"that can consume computing resources. Setting the value too high can result "
"in meshes with a level of detail that is too low. Default is 1e-3, which is "
"a good starting point for a range of cases."
msgstr ""

#: ../../cadquery/cadquery/occ_impl/shapes.pydocstring of
#: cadquery.occ_impl.shapes.Shape.exportStl:8
msgid ""
"Angular deflection setting which limits the angle between subsequent "
"segments in a polyline. Default is 0.1."
msgstr ""

#: ../../cadquery/cadquery/occ_impl/shapes.pydocstring of
#: cadquery.occ_impl.shapes.Shape.exportStl:9
msgid ""
"Export the file as ASCII (True) or binary (False) STL format.  Default is "
"binary."
msgstr ""

#: ../../cadquery/cadquery/occ_impl/shapes.pydocstring of
#: cadquery.occ_impl.shapes.Shape.exportStl:10
msgid ""
"If True, tolerance will be scaled by the size of the edge being meshed. "
"Default is True. Setting this value to True may cause large features to "
"become faceted, or small features dense."
msgstr ""

#: ../../cadquery/cadquery/occ_impl/shapes.pydocstring of
#: cadquery.occ_impl.shapes.Shape.exportStl:12
msgid ""
"If True, OCCT will use parallel processing to mesh the shape. Default is "
"True."
msgstr ""

#: ../../cadquery/doc/importexport.rst:289
#: ../../cadquery/doc/importexport.rst:332
#: ../../cadquery/doc/importexport.rst:362
msgid ""
"For more complex objects, some experimentation with ``tolerance`` and "
"``angularTolerance`` may be required to find the optimum values that will "
"produce an acceptable mesh."
msgstr ""

#: ../../cadquery/doc/importexport.rst:302
msgid "Exporting AMF and 3MF"
msgstr ""

#: ../../cadquery/doc/importexport.rst:304
msgid ""
"The AMF and 3MF exporters are capable of adjusting the quality of the "
"resulting mesh, and accept the following parameters."
msgstr ""

#: ../../cadquery/doc/importexport.rst:306
msgid "``fileName`` - The path and file name to write the AMF output to."
msgstr ""

#: ../../cadquery/doc/importexport.rst:307
#: ../../cadquery/doc/importexport.rst:329
#: ../../cadquery/doc/importexport.rst:359
msgid ""
"``tolerance`` - A linear deflection setting which limits the distance "
"between a curve and its tessellation. Setting this value too low will result"
" in large meshes that can consume computing resources. Setting the value too"
" high can result in meshes with a level of detail that is too low. Default "
"is 0.1, which is good starting point for a range of cases."
msgstr ""

#: ../../cadquery/doc/importexport.rst:308
#: ../../cadquery/doc/importexport.rst:330
#: ../../cadquery/doc/importexport.rst:360
msgid ""
"``angularTolerance`` - Angular deflection setting which limits the angle "
"between subsequent segments in a polyline. Default is 0.1."
msgstr ""

#: ../../cadquery/doc/importexport.rst:310
msgid ""
"For more complex objects, some experimentation with ``tolerance`` and "
"``angularTolerance`` may be required to find the optimum values that will "
"produce an acceptable mesh. Note that parameters for color and material are "
"absent."
msgstr ""

#: ../../cadquery/doc/importexport.rst:324
msgid "Exporting TJS"
msgstr ""

#: ../../cadquery/doc/importexport.rst:326
msgid ""
"The TJS (ThreeJS) exporter produces a file in JSON format that describes a "
"scene for the ThreeJS WebGL renderer. The objects in the first argument are "
"converted into a mesh and then form the ThreeJS geometry for the scene. The "
"mesh can be adjusted with the following parameters."
msgstr ""

#: ../../cadquery/doc/importexport.rst:328
msgid "``fileName`` - The path and file name to write the ThreeJS output to."
msgstr ""

#: ../../cadquery/doc/importexport.rst:350
msgid ""
"Note that the export type was explicitly specified as ``TJS`` because the "
"extension that was used for the file name was ``.json``. If the extension "
"``.tjs`` had been used, CadQuery would have understood to use the ``TJS`` "
"export format."
msgstr ""

#: ../../cadquery/doc/importexport.rst:354
msgid "Exporting VRML"
msgstr ""

#: ../../cadquery/doc/importexport.rst:356
msgid ""
"The VRML exporter is capable of adjusting the quality of the resulting mesh,"
" and accepts the following parameters."
msgstr ""

#: ../../cadquery/doc/importexport.rst:358
msgid "``fileName`` - The path and file name to write the VRML output to."
msgstr ""

#: ../../cadquery/doc/importexport.rst:377
msgid "Exporting DXF"
msgstr ""

#: ../../cadquery/doc/importexport.rst:381
msgid ""
":class:`cadquery.occ_impl.exporters.dxf.DxfDocument` for exporting multiple "
"Workplanes to one or many layers of a DXF document."
msgstr ""

#: ../../cadquery/doc/importexport.rst:385
msgid "Options"
msgstr ""

#: ../../cadquery/doc/importexport.rst:394
msgid "``approx``"
msgstr ""

#: ../../cadquery/doc/importexport.rst:388
msgid ""
"Approximation strategy for converting :class:`cadquery.Workplane` objects to"
" DXF entities:"
msgstr ""

#: ../../cadquery/doc/importexport.rst:390
msgid "``None``"
msgstr ""

#: ../../cadquery/doc/importexport.rst:391
msgid "no approximation applied"
msgstr ""

#: ../../cadquery/doc/importexport.rst:392
msgid "``\"spline\"``"
msgstr ""

#: ../../cadquery/doc/importexport.rst:393
msgid "all splines approximated as cubic splines"
msgstr ""

#: ../../cadquery/doc/importexport.rst:394
msgid "``\"arc\"``"
msgstr ""

#: ../../cadquery/doc/importexport.rst:395
msgid "all curves approximated as arcs and straight segments"
msgstr ""

#: ../../cadquery/doc/importexport.rst:397
msgid "``tolerance``"
msgstr ""

#: ../../cadquery/doc/importexport.rst:397
msgid ""
"Approximation tolerance for converting :class:`cadquery.Workplane` objects "
"to DXF entities. See `Approximation strategy`_."
msgstr ""

#: ../../cadquery/doc/importexport.rst:401
msgid "``doc_units``"
msgstr ""

#: ../../cadquery/doc/importexport.rst:400
msgid ""
"Ezdxf document/modelspace :doc:`units <ezdxf-stable:concepts/units>`. See "
"`Units`_."
msgstr ""

#: ../../cadquery/doc/importexport.rst:403
msgid "DXF document without options."
msgstr ""

#: ../../cadquery/doc/importexport.rst:417
msgid "Units"
msgstr ""

#: ../../cadquery/doc/importexport.rst:419
msgid "The default DXF document units are mm (:code:`doc_units = 4`)."
msgstr ""

#: ../../cadquery/doc/importexport.rst:422
msgid "doc_units"
msgstr ""

#: ../../cadquery/doc/importexport.rst:422
msgid "Unit"
msgstr ""

#: ../../cadquery/doc/importexport.rst:424
msgid "0"
msgstr ""

#: ../../cadquery/doc/importexport.rst:424
msgid "Unitless"
msgstr ""

#: ../../cadquery/doc/importexport.rst:425
msgid "1"
msgstr ""

#: ../../cadquery/doc/importexport.rst:425
msgid "Inches"
msgstr ""

#: ../../cadquery/doc/importexport.rst:426
msgid "2"
msgstr ""

#: ../../cadquery/doc/importexport.rst:426
msgid "Feet"
msgstr ""

#: ../../cadquery/doc/importexport.rst:427
msgid "3"
msgstr ""

#: ../../cadquery/doc/importexport.rst:427
msgid "Miles"
msgstr ""

#: ../../cadquery/doc/importexport.rst:428
msgid "4"
msgstr ""

#: ../../cadquery/doc/importexport.rst:428
msgid "Millimeters"
msgstr ""

#: ../../cadquery/doc/importexport.rst:429
msgid "5"
msgstr ""

#: ../../cadquery/doc/importexport.rst:429
msgid "Centimeters"
msgstr ""

#: ../../cadquery/doc/importexport.rst:430
msgid "6"
msgstr ""

#: ../../cadquery/doc/importexport.rst:430
msgid "Meters"
msgstr ""

#: ../../cadquery/doc/importexport.rst:433
msgid ""
"Document units can be set to any :doc:`unit supported by ezdxf <ezdxf-"
"stable:concepts/units>`."
msgstr ""

#: ../../cadquery/doc/importexport.rst:435
msgid "DXF document with units set to meters."
msgstr ""

#: ../../cadquery/doc/importexport.rst:461
msgid "Approximation strategy"
msgstr ""

#: ../../cadquery/doc/importexport.rst:463
msgid ""
"By default, the DXF exporter will output splines exactly as they are "
"represented by the OpenCascade kernel. Unfortunately some software cannot "
"handle higher-order splines resulting in missing curves after DXF import. To"
" resolve this, specify an approximation strategy controlled by the following"
" options:"
msgstr ""

#: ../../cadquery/doc/importexport.rst:465
msgid ""
"``approx`` - ``None``, ``\"spline\"`` or ``\"arc\"``. ``\"spline\"`` results"
" in all splines approximated with cubic splines. ``\"arc\"`` results in all "
"curves approximated with arcs and line segments."
msgstr ""

#: ../../cadquery/doc/importexport.rst:466
msgid ""
"``tolerance``: Acceptable error of the approximation, in document/modelspace"
" units. Defaults to 0.001 (1 thou for inch-scale drawings, 1 µm for mm-scale"
" drawings)."
msgstr ""

#: ../../cadquery/doc/importexport.rst:468
msgid "DXF document with curves approximated with cubic splines."
msgstr ""

#: ../../cadquery/doc/importexport.rst:475
msgid "Exporting Other Formats"
msgstr ""

#: ../../cadquery/doc/importexport.rst:477
msgid ""
"The remaining export formats do not accept any additional parameters other "
"than file name, and can be exported using the following structure."
msgstr ""

#: ../../cadquery/doc/importexport.rst:489
msgid ""
"Be sure to use the correct file extension so that CadQuery can determine the"
" export format. If in doubt, fall back to setting the type explicitly by "
"using :py:class:`exporters.ExportTypes`."
msgstr ""

#: ../../cadquery/doc/importexport.rst:492
msgid "For example:"
msgstr ""
