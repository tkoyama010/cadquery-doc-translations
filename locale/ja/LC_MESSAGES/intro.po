# SOME DESCRIPTIVE TITLE.
# Copyright (C) Parametric Products Intellectual Holdings LLC, All Rights Reserved
# This file is distributed under the same license as the CadQuery package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Tetsuo Koyama <tkoyama010@gmail.com>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CadQuery 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-05-27 11:06+0000\n"
"PO-Revision-Date: 2021-05-27 10:39+0000\n"
"Last-Translator: Tetsuo Koyama <tkoyama010@gmail.com>, 2021\n"
"Language-Team: Japanese (https://www.transifex.com/getfem-doc/teams/121077/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../cadquery/doc/intro.rst:5
msgid "Introduction"
msgstr "はじめに"

#: ../../cadquery/doc/intro.rst:8
msgid "What is CadQuery"
msgstr ""

#: ../../cadquery/doc/intro.rst:10
msgid ""
"CadQuery is an intuitive, easy-to-use Python library for building parametric"
" 3D CAD models.  It has several goals:"
msgstr ""
"CadQueryは、パラメトリック3 D CADモデルを構築するための、直感的で使いやすいPythonライブラリです。次のような目標があります。"

#: ../../cadquery/doc/intro.rst:12
msgid ""
"Build models with scripts that are as close as possible to how you'd "
"describe the object to a human, using a standard, already established "
"programming language"
msgstr "すでに確立されている標準的なプログラミング言語を使用して、オブジェクトを人間に説明する方法に可能な限り近いスクリプトでモデルを構築します。"

#: ../../cadquery/doc/intro.rst:15
msgid ""
"Create parametric models that can be very easily customized by end users"
msgstr "エンドユーザが非常に簡単にカスタマイズできるパラメトリックモデルを作成します"

#: ../../cadquery/doc/intro.rst:17
msgid ""
"Output high quality CAD formats like STEP and AMF in addition to traditional"
" STL"
msgstr "従来のSTL形式に加えて、STEPやAMFなどの高品質なCAD形式を出力します。"

#: ../../cadquery/doc/intro.rst:19
msgid ""
"Provide a non-proprietary, plain text model format that can be edited and "
"executed with only a web browser"
msgstr "Webブラウザのみで編集および実行できる、独自仕様ではないプレーン・テキスト・モデル・フォーマットを提供します。"

#: ../../cadquery/doc/intro.rst:21
msgid ""
"CadQuery 2 is based on `OCP https://github.com/CadQuery/OCP`_, which is a "
"set of Python bindings for the open-source `OpenCascade "
"<http://www.opencascade.com/>`_ modelling kernel."
msgstr ""

#: ../../cadquery/doc/intro.rst:25
msgid ""
"Using CadQuery, you can build fully parametric models with a very small "
"amount of code. For example, this simple script produces a flat plate with a"
" hole in the middle::"
msgstr ""

#: ../../cadquery/doc/intro.rst:34
msgid ""
"That's a bit of a dixie-cup example. But it is pretty similar to a more "
"useful part: a parametric pillow block for a standard 608-size ball "
"bearing::"
msgstr ""

#: ../../cadquery/doc/intro.rst:46
msgid "Lots more examples are available in the :ref:`examples`"
msgstr ""

#: ../../cadquery/doc/intro.rst:49
msgid "CadQuery is a library,  GUIs are separate"
msgstr ""

#: ../../cadquery/doc/intro.rst:51
msgid ""
"CadQuery is a library, that's intentionally designed to be usable as a GUI-"
"less library. This enables its use in a variety of engineering and "
"scientific applications that create 3D models programmatically."
msgstr ""

#: ../../cadquery/doc/intro.rst:54
msgid "If you'd like a GUI, you have a couple of options:"
msgstr ""

#: ../../cadquery/doc/intro.rst:56
msgid "The Qt-based GUI `CQ-editor <https://github.com/CadQuery/CQ-editor>`_"
msgstr ""

#: ../../cadquery/doc/intro.rst:57
msgid ""
"As an Jupyter extension `jupyter-cadquery <https://github.com/bernhard-42"
"/jupyter-cadquery>`_"
msgstr ""

#: ../../cadquery/doc/intro.rst:61
msgid "Why CadQuery instead of OpenSCAD?"
msgstr ""

#: ../../cadquery/doc/intro.rst:63
msgid ""
"Like OpenSCAD, CadQuery is an open-source, script based, parametric model "
"generator. But CadQuery has several key advantages:"
msgstr ""

#: ../../cadquery/doc/intro.rst:65
msgid ""
"**The scripts use a standard programming language**, Python, and thus can "
"benefit from the associated infrastructure. This includes many standard "
"libraries and IDEs"
msgstr ""

#: ../../cadquery/doc/intro.rst:68
msgid ""
"**More powerful CAD kernel** OpenCascade is much more powerful than CGAL. "
"Features supported natively by OCC include NURBS, splines, surface sewing, "
"STL repair, STEP import/export,  and other complex operations, in addition "
"to the standard CSG operations supported by CGAL"
msgstr ""

#: ../../cadquery/doc/intro.rst:72
msgid ""
"**Ability to import/export STEP and DXF** We think the ability to begin with"
" a STEP model, created in a CAD package, and then add parametric features is"
" key.  This is possible in OpenSCAD using STL, but STL is a lossy format"
msgstr ""

#: ../../cadquery/doc/intro.rst:75
msgid ""
"**Less Code and easier scripting**  CadQuery scripts require less code to "
"create most objects, because it is possible to locate features based on the "
"position of other features, workplanes, vertices, etc."
msgstr ""

#: ../../cadquery/doc/intro.rst:78
msgid ""
"**Better Performance**  CadQuery scripts can build STL, STEP, and AMF faster"
" than OpenSCAD."
msgstr ""

#: ../../cadquery/doc/intro.rst:81
msgid "Where does the name CadQuery come from?"
msgstr ""

#: ../../cadquery/doc/intro.rst:83
msgid ""
"CadQuery is inspired by `jQuery <http://www.jquery.com>`_ , a popular "
"framework that revolutionized web development involving javascript."
msgstr ""

#: ../../cadquery/doc/intro.rst:86
msgid ""
"CadQuery is for 3D CAD what jQuery is for javascript. If you are familiar "
"with how jQuery works, you will probably recognize several jQuery features "
"that CadQuery uses:"
msgstr ""

#: ../../cadquery/doc/intro.rst:89
msgid "A fluent API to create clean, easy to read code"
msgstr ""

#: ../../cadquery/doc/intro.rst:91
msgid "Ability to use the library along side other Python libraries"
msgstr ""

#: ../../cadquery/doc/intro.rst:93
msgid "Clear and complete documentation, with plenty of samples."
msgstr ""
