# SOME DESCRIPTIVE TITLE.
# Copyright (C) Parametric Products Intellectual Holdings LLC, All Rights Reserved
# This file is distributed under the same license as the CadQuery package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CadQuery 2.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-10-10 03:32+0000\n"
"PO-Revision-Date: 2021-05-27 10:39+0000\n"
"Language-Team: Japanese (https://app.transifex.com/tkoyama010/teams/121077/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../cadquery/doc/selectors.rst:4
msgid "Selectors Reference"
msgstr ""

#: ../../cadquery/doc/selectors.rst:7
msgid ""
"CadQuery selector strings allow filtering various types of object lists. "
"Most commonly, Edges, Faces, and Vertices are used, but all objects types "
"can be filtered."
msgstr ""

#: ../../cadquery/doc/selectors.rst:10
msgid ""
"Object lists are created by using the following methods, which each collect "
"a type of shape:"
msgstr ""

#: ../../cadquery/doc/selectors.rst:12
msgid ":py:meth:`cadquery.Workplane.vertices`"
msgstr ""

#: ../../cadquery/doc/selectors.rst:13
msgid ":py:meth:`cadquery.Workplane.edges`"
msgstr ""

#: ../../cadquery/doc/selectors.rst:14
msgid ":py:meth:`cadquery.Workplane.faces`"
msgstr ""

#: ../../cadquery/doc/selectors.rst:15
msgid ":py:meth:`cadquery.Workplane.shells`"
msgstr ""

#: ../../cadquery/doc/selectors.rst:16
msgid ":py:meth:`cadquery.Workplane.solids`"
msgstr ""

#: ../../cadquery/doc/selectors.rst:18
msgid ""
"Each of these methods accepts either a Selector object or a string. String "
"selectors are simply shortcuts for using the full object equivalents. If you"
" pass one of the string patterns in, CadQuery will automatically use the "
"associated selector object."
msgstr ""

#: ../../cadquery/doc/selectors.rst:25
msgid ""
"String selectors are simply shortcuts to concrete selector classes, which "
"you can use or extend. For a full description of how each selector class "
"works, see :ref:`classreference`."
msgstr ""

#: ../../cadquery/doc/selectors.rst:28
msgid ""
"If you find that the built-in selectors are not sufficient, you can easily "
"plug in your own. See :ref:`extending` to see how."
msgstr ""

#: ../../cadquery/doc/selectors.rst:33
msgid "Combining Selectors"
msgstr ""

#: ../../cadquery/doc/selectors.rst:35
msgid ""
"Selectors can be combined logically, currently defined operators include "
"**and**, **or**, **not** and **exc[ept]** (set difference).  For example:"
msgstr ""

#: ../../cadquery/doc/selectors.rst:41
msgid "Much more complex expressions are possible as well:"
msgstr ""

#: ../../cadquery/doc/selectors.rst:58
msgid "Filtering Faces"
msgstr ""

#: ../../cadquery/doc/selectors.rst:60
msgid ""
"All types of string selectors work on faces.  In most cases, the selector "
"refers to the direction of the **normal vector** of the face."
msgstr ""

#: ../../cadquery/doc/selectors.rst:65
msgid ""
"If a face is not planar, selectors are evaluated at the center of mass of "
"the face. This can lead to results that are quite unexpected."
msgstr ""

#: ../../cadquery/doc/selectors.rst:68 ../../cadquery/doc/selectors.rst:99
msgid ""
"The axis used in the listing below are for illustration: any axis would work"
" similarly in each case."
msgstr ""

#: ../../cadquery/doc/selectors.rst:71 ../../cadquery/doc/selectors.rst:103
#: ../../cadquery/doc/selectors.rst:127
msgid "Selector"
msgstr ""

#: ../../cadquery/doc/selectors.rst:71 ../../cadquery/doc/selectors.rst:103
#: ../../cadquery/doc/selectors.rst:127
msgid "Selects"
msgstr ""

#: ../../cadquery/doc/selectors.rst:71 ../../cadquery/doc/selectors.rst:103
#: ../../cadquery/doc/selectors.rst:127
msgid "Selector Class"
msgstr ""

#: ../../cadquery/doc/selectors.rst:73 ../../cadquery/doc/selectors.rst:105
msgid "+Z"
msgstr ""

#: ../../cadquery/doc/selectors.rst:73
msgid "Faces with normal in +z direction"
msgstr ""

#: ../../cadquery/doc/selectors.rst:73 ../../cadquery/doc/selectors.rst:75
#: ../../cadquery/doc/selectors.rst:105 ../../cadquery/doc/selectors.rst:107
msgid ":py:class:`cadquery.DirectionSelector`"
msgstr ""

#: ../../cadquery/doc/selectors.rst:74 ../../cadquery/doc/selectors.rst:106
msgid "\\|Z"
msgstr ""

#: ../../cadquery/doc/selectors.rst:74
msgid "Faces with normal parallel to z dir"
msgstr ""

#: ../../cadquery/doc/selectors.rst:74 ../../cadquery/doc/selectors.rst:106
msgid ":py:class:`cadquery.ParallelDirSelector`"
msgstr ""

#: ../../cadquery/doc/selectors.rst:75 ../../cadquery/doc/selectors.rst:107
msgid "-X"
msgstr ""

#: ../../cadquery/doc/selectors.rst:75
msgid "Faces with normal in neg x direction"
msgstr ""

#: ../../cadquery/doc/selectors.rst:76 ../../cadquery/doc/selectors.rst:108
msgid "#Z"
msgstr ""

#: ../../cadquery/doc/selectors.rst:76
msgid "Faces with normal orthogonal to z dir"
msgstr ""

#: ../../cadquery/doc/selectors.rst:76 ../../cadquery/doc/selectors.rst:108
msgid ":py:class:`cadquery.PerpendicularDirSelector`"
msgstr ""

#: ../../cadquery/doc/selectors.rst:77
msgid "%Plane"
msgstr ""

#: ../../cadquery/doc/selectors.rst:77
msgid "Faces of type plane"
msgstr ""

#: ../../cadquery/doc/selectors.rst:77 ../../cadquery/doc/selectors.rst:109
msgid ":py:class:`cadquery.TypeSelector`"
msgstr ""

#: ../../cadquery/doc/selectors.rst:78 ../../cadquery/doc/selectors.rst:110
#: ../../cadquery/doc/selectors.rst:129
msgid ">Y"
msgstr ""

#: ../../cadquery/doc/selectors.rst:78
msgid "Face farthest in the positive y dir"
msgstr ""

#: ../../cadquery/doc/selectors.rst:78 ../../cadquery/doc/selectors.rst:79
#: ../../cadquery/doc/selectors.rst:110 ../../cadquery/doc/selectors.rst:111
#: ../../cadquery/doc/selectors.rst:129 ../../cadquery/doc/selectors.rst:130
msgid ":py:class:`cadquery.DirectionMinMaxSelector`"
msgstr ""

#: ../../cadquery/doc/selectors.rst:79 ../../cadquery/doc/selectors.rst:111
#: ../../cadquery/doc/selectors.rst:130
msgid "<Y"
msgstr ""

#: ../../cadquery/doc/selectors.rst:79
msgid "Face farthest in the negative y dir"
msgstr ""

#: ../../cadquery/doc/selectors.rst:80
msgid ">Y[-2]"
msgstr ""

#: ../../cadquery/doc/selectors.rst:80
msgid "2nd farthest Face **normal** to the y dir"
msgstr ""

#: ../../cadquery/doc/selectors.rst:80 ../../cadquery/doc/selectors.rst:81
#: ../../cadquery/doc/selectors.rst:112 ../../cadquery/doc/selectors.rst:113
msgid ":py:class:`cadquery.DirectionNthSelector`"
msgstr ""

#: ../../cadquery/doc/selectors.rst:81
msgid "<Y[0]"
msgstr ""

#: ../../cadquery/doc/selectors.rst:81
msgid "1st closest Face **normal** to the y dir"
msgstr ""

#: ../../cadquery/doc/selectors.rst:82 ../../cadquery/doc/selectors.rst:114
#: ../../cadquery/doc/selectors.rst:131
msgid ">>Y[-2]"
msgstr ""

#: ../../cadquery/doc/selectors.rst:82
msgid "2nd farthest Face in the y dir"
msgstr ""

#: ../../cadquery/doc/selectors.rst:82 ../../cadquery/doc/selectors.rst:83
#: ../../cadquery/doc/selectors.rst:114 ../../cadquery/doc/selectors.rst:115
#: ../../cadquery/doc/selectors.rst:131 ../../cadquery/doc/selectors.rst:132
msgid ":py:class:`cadquery.CenterNthSelector`"
msgstr ""

#: ../../cadquery/doc/selectors.rst:83 ../../cadquery/doc/selectors.rst:115
#: ../../cadquery/doc/selectors.rst:132
msgid "<<Y[0]"
msgstr ""

#: ../../cadquery/doc/selectors.rst:83
msgid "1st closest Face in the y dir"
msgstr ""

#: ../../cadquery/doc/selectors.rst:90
msgid "Filtering Edges"
msgstr ""

#: ../../cadquery/doc/selectors.rst:92
msgid "The selector usually refers to the **direction** of the edge."
msgstr ""

#: ../../cadquery/doc/selectors.rst:96
msgid ""
"Non-linear edges are not selected for any string selectors except type (%) "
"and center (>>). Non-linear edges are never returned when these filters are "
"applied."
msgstr ""

#: ../../cadquery/doc/selectors.rst:105
msgid "Edges aligned in the Z direction"
msgstr ""

#: ../../cadquery/doc/selectors.rst:106
msgid "Edges parallel to z direction"
msgstr ""

#: ../../cadquery/doc/selectors.rst:107
msgid "Edges aligned in neg x direction"
msgstr ""

#: ../../cadquery/doc/selectors.rst:108
msgid "Edges perpendicular to z direction"
msgstr ""

#: ../../cadquery/doc/selectors.rst:109
msgid "%Line"
msgstr ""

#: ../../cadquery/doc/selectors.rst:109
msgid "Edges of type line"
msgstr ""

#: ../../cadquery/doc/selectors.rst:110
msgid "Edges farthest in the positive y dir"
msgstr ""

#: ../../cadquery/doc/selectors.rst:111
msgid "Edges farthest in the negative y dir"
msgstr ""

#: ../../cadquery/doc/selectors.rst:112
msgid ">Y[1]"
msgstr ""

#: ../../cadquery/doc/selectors.rst:112
msgid "2nd closest **parallel** edge in the positive y dir"
msgstr ""

#: ../../cadquery/doc/selectors.rst:113
msgid "<Y[-2]"
msgstr ""

#: ../../cadquery/doc/selectors.rst:113
msgid "2nd farthest **parallel** edge in the negative y dir"
msgstr ""

#: ../../cadquery/doc/selectors.rst:114
msgid "2nd farthest edge in the y dir"
msgstr ""

#: ../../cadquery/doc/selectors.rst:115
msgid "1st closest edge in the y dir"
msgstr ""

#: ../../cadquery/doc/selectors.rst:122
msgid "Filtering Vertices"
msgstr ""

#: ../../cadquery/doc/selectors.rst:124
msgid ""
"Only a few of the filter types apply to vertices. The location of the vertex"
" is the subject of the filter."
msgstr ""

#: ../../cadquery/doc/selectors.rst:129
msgid "Vertices farthest in the positive y dir"
msgstr ""

#: ../../cadquery/doc/selectors.rst:130
msgid "Vertices farthest in the negative y dir"
msgstr ""

#: ../../cadquery/doc/selectors.rst:131
msgid "2nd farthest vertex in the y dir"
msgstr ""

#: ../../cadquery/doc/selectors.rst:132
msgid "1st closest vertex in the y dir"
msgstr ""

#: ../../cadquery/doc/selectors.rst:136
msgid "User-defined Directions"
msgstr ""

#: ../../cadquery/doc/selectors.rst:138
msgid ""
"It is possible to use user defined vectors as a basis for the selectors. For"
" example:"
msgstr ""

#: ../../cadquery/doc/selectors.rst:149
msgid "Topological Selectors"
msgstr ""

#: ../../cadquery/doc/selectors.rst:151
msgid ""
"Is is also possible to use topological relations to select objects. "
"Currently the following methods are supported:"
msgstr ""

#: ../../cadquery/doc/selectors.rst:154
msgid ":py:meth:`cadquery.Workplane.ancestors`"
msgstr ""

#: ../../cadquery/doc/selectors.rst:155
msgid ":py:meth:`cadquery.Workplane.siblings`"
msgstr ""

#: ../../cadquery/doc/selectors.rst:157
msgid ""
"Ancestors allows to select all objects containing currently selected object."
msgstr ""

#: ../../cadquery/doc/selectors.rst:165
msgid ""
"Siblings allows to select all objects of the same type as selection that are"
" connected via the specfied kind of elements."
msgstr ""

#: ../../cadquery/doc/selectors.rst:176
msgid "Using selectors with Shape and Sketch objects"
msgstr ""

#: ../../cadquery/doc/selectors.rst:178
msgid ""
"It is possible to use selectors with :py:class:`cadquery.Shape` and "
":py:class:`cadquery.Sketch` objects. This includes chaining and combining."
msgstr ""
