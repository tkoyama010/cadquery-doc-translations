# SOME DESCRIPTIVE TITLE.
# Copyright (C) CadQuery Development Team
# This file is distributed under the same license as the CadQuery package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CadQuery 2.7.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-08 00:07+0000\n"
"PO-Revision-Date: 2024-12-24 00:05+0000\n"
"Language-Team: Japanese (https://app.transifex.com/tkoyama010/teams/121077/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../cadquery/doc/vis.rst:5
msgid "Visualization"
msgstr ""

#: ../../cadquery/doc/vis.rst:9
msgid "Pure Python"
msgstr ""

#: ../../cadquery/doc/vis.rst:11
msgid ""
"Since version 2.4 CadQuery supports visualization without any external "
"tools. Those facilities are based on the VTK library and are not tied to any"
" external tool."
msgstr ""

#: ../../cadquery/doc/vis.rst:29
msgid ""
"One can visualize objects of type :class:`~cadquery.Workplane`, "
":class:`~cadquery.Sketch`, :class:`~cadquery.Assembly`, "
":class:`~cadquery.Shape`, :class:`~cadquery.Vector`, "
":class:`~cadquery.Location` and lists thereof."
msgstr ""

#: ../../cadquery/doc/vis.rst:59
msgid ""
"Additionally it is possible to integrate with other libraries using VTK and "
"display any `vtkProp` object."
msgstr ""

#: ../../cadquery/doc/vis.rst:78
msgid "Note that currently the show function is blocking."
msgstr ""

#: ../../cadquery/doc/vis.rst:81
msgid "Screenshots"
msgstr ""

#: ../../cadquery/doc/vis.rst:83
msgid ""
":meth:`~cadquery.vis.show` allows additionally to take screenshots in `png` "
"format. One can specify zoom, camera position and windows size."
msgstr ""

#: ../../cadquery/doc/vis.rst:97
msgid ""
"Intermittent issues were observed with this functionality, please submit "
"detailed bug reports in case of problems."
msgstr ""

#: ../../cadquery/doc/vis.rst:100
msgid ""
"Sometimes it is desirable to control the camera position precisely. This can"
" be achieved as follows."
msgstr ""

#: ../../cadquery/doc/vis.rst:120
msgid "Control points"
msgstr ""

#: ../../cadquery/doc/vis.rst:122
msgid ""
":meth:`~cadquery.vis.ctrlPts` allows to visualize control points of surfaces"
" and curves."
msgstr ""

#: ../../cadquery/doc/vis.rst:143
msgid ""
"Note that for some geometries explicit conversion to spline representation "
"might be needed. :meth:`~cadquery.Shape.toSplines` performs approximate "
"conversion and :meth:`~cadquery.Shape.toNURBS` performs exact one."
msgstr ""

#: ../../cadquery/doc/vis.rst:149
msgid "Styling"
msgstr ""

#: ../../cadquery/doc/vis.rst:151
msgid ""
"Fine-grained control of the appearance of every item can be achieved using "
":meth:`~cadquery.vis.style`."
msgstr ""

#: ../../cadquery/doc/vis.rst:176
msgid "Jupyter/JupterLab"
msgstr ""

#: ../../cadquery/doc/vis.rst:178
msgid ""
"There is also more limited support for displaying "
":class:`~cadquery.Workplane`, :class:`~cadquery.Sketch`, "
":class:`~cadquery.Assembly`, :class:`~cadquery.Shape` in Jupyter and "
"JupyterLab. This functionality is implemented using VTK.js."
msgstr ""
