# SOME DESCRIPTIVE TITLE.
# Copyright (C) Parametric Products Intellectual Holdings LLC, All Rights Reserved
# This file is distributed under the same license as the CadQuery package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CadQuery 2.5.0.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-12-16 00:04+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../cadquery/doc/intro.rst:5
msgid "Introduction"
msgstr ""

#: ../../cadquery/doc/intro.rst:8
msgid "What is CadQuery"
msgstr ""

#: ../../cadquery/doc/intro.rst:10
msgid "CadQuery is an intuitive, easy-to-use Python library for building parametric 3D CAD models.  It has several goals:"
msgstr ""

#: ../../cadquery/doc/intro.rst:12
msgid "Build models with scripts that are as close as possible to how you'd describe the object to a human, using a standard, already established programming language"
msgstr ""

#: ../../cadquery/doc/intro.rst:15
msgid "Create parametric models that can be very easily customized by end users"
msgstr ""

#: ../../cadquery/doc/intro.rst:17
msgid "Output high quality CAD formats like STEP, AMF and 3MF in addition to traditional STL"
msgstr ""

#: ../../cadquery/doc/intro.rst:19
msgid "Provide a non-proprietary, plain text model format that can be edited and executed with only a web browser"
msgstr ""

#: ../../cadquery/doc/intro.rst:21
msgid "CadQuery 2 is based on `OCP <https://github.com/CadQuery/OCP>`_, which is a set of Python bindings for the open-source `OpenCascade <http://www.opencascade.com/>`_ modelling kernel."
msgstr ""

#: ../../cadquery/doc/intro.rst:25
msgid "Using CadQuery, you can build fully parametric models with a very small amount of code. For example, this simple script produces a flat plate with a hole in the middle::"
msgstr ""

#: ../../cadquery/doc/intro.rst:34
msgid "That's a bit of a dixie-cup example. But it is pretty similar to a more useful part: a parametric pillow block for a standard 608-size ball bearing::"
msgstr ""

#: ../../cadquery/doc/intro.rst:54
msgid "Lots more examples are available in the :ref:`examples`"
msgstr ""

#: ../../cadquery/doc/intro.rst:57
msgid "CadQuery is a library,  GUIs are separate"
msgstr ""

#: ../../cadquery/doc/intro.rst:59
msgid "CadQuery is a library, that's intentionally designed to be usable as a GUI-less library. This enables its use in a variety of engineering and scientific applications that create 3D models programmatically."
msgstr ""

#: ../../cadquery/doc/intro.rst:62
msgid "If you'd like a GUI, you have a couple of options:"
msgstr ""

#: ../../cadquery/doc/intro.rst:64
msgid "The Qt-based GUI `CQ-editor <https://github.com/CadQuery/CQ-editor>`_"
msgstr ""

#: ../../cadquery/doc/intro.rst:65
msgid "As a Jupyter extension `jupyter-cadquery <https://github.com/bernhard-42/jupyter-cadquery>`_"
msgstr ""

#: ../../cadquery/doc/intro.rst:69
msgid "Why CadQuery instead of OpenSCAD?"
msgstr ""

#: ../../cadquery/doc/intro.rst:71
msgid "Like OpenSCAD, CadQuery is an open-source, script based, parametric model generator. But CadQuery has several key advantages:"
msgstr ""

#: ../../cadquery/doc/intro.rst:73
msgid "**The scripts use a standard programming language**, Python, and thus can benefit from the associated infrastructure. This includes many standard libraries and IDEs"
msgstr ""

#: ../../cadquery/doc/intro.rst:76
msgid "**More powerful CAD kernel** OpenCascade is much more powerful than CGAL. Features supported natively by OCC include NURBS, splines, surface sewing, STL repair, STEP import/export,  and other complex operations, in addition to the standard CSG operations supported by CGAL"
msgstr ""

#: ../../cadquery/doc/intro.rst:80
msgid "**Ability to import/export STEP and DXF** We think the ability to begin with a STEP model, created in a CAD package, and then add parametric features is key.  This is possible in OpenSCAD using STL, but STL is a lossy format"
msgstr ""

#: ../../cadquery/doc/intro.rst:83
msgid "**Less Code and easier scripting**  CadQuery scripts require less code to create most objects, because it is possible to locate features based on the position of other features, workplanes, vertices, etc."
msgstr ""

#: ../../cadquery/doc/intro.rst:86
msgid "**Better Performance**  CadQuery scripts can build STL, STEP, AMF and 3MF faster than OpenSCAD."
msgstr ""

#: ../../cadquery/doc/intro.rst:89
msgid "Where does the name CadQuery come from?"
msgstr ""

#: ../../cadquery/doc/intro.rst:91
msgid "CadQuery is inspired by `jQuery <http://www.jquery.com>`_, a popular framework that revolutionized web development involving JavaScript."
msgstr ""

#: ../../cadquery/doc/intro.rst:94
msgid "CadQuery is for 3D CAD what jQuery is for JavaScript. If you are familiar with how jQuery works, you will probably recognize several jQuery features that CadQuery uses:"
msgstr ""

#: ../../cadquery/doc/intro.rst:97
msgid "A fluent API to create clean, easy to read code"
msgstr ""

#: ../../cadquery/doc/intro.rst:99
msgid "Ability to use the library along side other Python libraries"
msgstr ""

#: ../../cadquery/doc/intro.rst:101
msgid "Clear and complete documentation, with plenty of samples."
msgstr ""
