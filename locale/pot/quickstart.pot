# SOME DESCRIPTIVE TITLE.
# Copyright (C) CadQuery Development Team
# This file is distributed under the same license as the CadQuery package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CadQuery 2.7.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-08 00:07+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../cadquery/doc/quickstart.rst:5
msgid "QuickStart"
msgstr ""

#: ../../cadquery/doc/quickstart.rst:9
msgid "Want a quick glimpse of what CadQuery can do?  This quickstart will demonstrate the basics of CadQuery using a simple example"
msgstr ""

#: ../../cadquery/doc/quickstart.rst:12
msgid "Prerequisites: CadQuery and CQ-editor installation"
msgstr ""

#: ../../cadquery/doc/quickstart.rst:14
msgid "If you have not already done so, follow the :ref:`installation`, to install CadQuery and CQ-editor."
msgstr ""

#: ../../cadquery/doc/quickstart.rst:16
msgid "After installation, run CQ-editor:"
msgstr ""

#: ../../cadquery/doc/quickstart.rst:20
msgid "Find the CadQuery code editor, on the left side.  You'll see that we start out with the script for a simple block."
msgstr ""

#: ../../cadquery/doc/quickstart.rst:23
msgid "What we'll accomplish"
msgstr ""

#: ../../cadquery/doc/quickstart.rst:25
msgid "We will build a fully parametric bearing pillow block in this quickstart.  Our finished object will look like this:"
msgstr ""

#: ../../cadquery/doc/quickstart.rst:29
msgid "**We would like our block to have these features:**"
msgstr ""

#: ../../cadquery/doc/quickstart.rst:31
msgid "It should be sized to hold a single 608 ( 'skate' ) bearing, in the center of the block."
msgstr ""

#: ../../cadquery/doc/quickstart.rst:32
msgid "It should have counter-bored holes for M2 socket head cap screws at the corners."
msgstr ""

#: ../../cadquery/doc/quickstart.rst:33
msgid "The length and width of the block should be configurable by the user to any reasonable size."
msgstr ""

#: ../../cadquery/doc/quickstart.rst:35
msgid "A human would describe this as:"
msgstr ""

#: ../../cadquery/doc/quickstart.rst:37
msgid "\"A rectangular block 80mm x 60mm x 10mm , with counter-bored holes for M2 socket head cap screws at the corners, and a circular pocket 22mm in diameter in the middle for a bearing.\""
msgstr ""

#: ../../cadquery/doc/quickstart.rst:40
msgid "Human descriptions are very elegant, right? Hopefully our finished script will not be too much more complex than this human-oriented description."
msgstr ""

#: ../../cadquery/doc/quickstart.rst:43
msgid "Let's see how we do."
msgstr ""

#: ../../cadquery/doc/quickstart.rst:46
msgid "Start With A single, simple Plate"
msgstr ""

#: ../../cadquery/doc/quickstart.rst:48
msgid "Let's start with a simple model that makes nothing but a rectangular block, but with place-holders for the dimensions. Paste this into the code editor:"
msgstr ""

#: ../../cadquery/doc/quickstart.rst:64
msgid "Press the green Render button in the toolbar to run the script. You should see our base object."
msgstr ""

#: ../../cadquery/doc/quickstart.rst:68
msgid "Nothing special, but its a start!"
msgstr ""

#: ../../cadquery/doc/quickstart.rst:71
msgid "Add the Holes"
msgstr ""

#: ../../cadquery/doc/quickstart.rst:73
msgid "Our pillow block needs to have a 22mm diameter hole in the center to hold the bearing."
msgstr ""

#: ../../cadquery/doc/quickstart.rst:75
msgid "This modification will do the trick:"
msgstr ""

#: ../../cadquery/doc/quickstart.rst:98
msgid "Rebuild your model by clicking the Render button. Your block should look like this:"
msgstr ""

#: ../../cadquery/doc/quickstart.rst:103
msgid "The code is pretty compact, let's step through it."
msgstr ""

#: ../../cadquery/doc/quickstart.rst:105
msgid "**Line 4** adds a new parameter, diameter, for the diameter of the hole"
msgstr ""

#: ../../cadquery/doc/quickstart.rst:107
msgid "**Lines 10-12**, we're adding the hole. :py:meth:`cadquery.Workplane.faces` selects the top-most face in the Z direction, and then :py:meth:`cadquery.Workplane.workplane` begins a new workplane located on this face. The center of this workplane is located at the center of mass of the shape, which in this case is the center of the plate. Finally, :py:meth:`cadquery.Workplane.hole` drills a hole through the part, 22mm in diameter."
msgstr ""

#: ../../cadquery/doc/quickstart.rst:115
msgid "Don't worry about the CadQuery syntax now.. you can learn all about it in the :ref:`apireference` later."
msgstr ""

#: ../../cadquery/doc/quickstart.rst:118
msgid "More Holes"
msgstr ""

#: ../../cadquery/doc/quickstart.rst:120
msgid "Ok, that hole was not too hard, but what about the counter-bored holes in the corners?"
msgstr ""

#: ../../cadquery/doc/quickstart.rst:122
msgid "An M2 Socket head cap screw has these dimensions:"
msgstr ""

#: ../../cadquery/doc/quickstart.rst:124
msgid "**Head Diameter** : 3.8 mm"
msgstr ""

#: ../../cadquery/doc/quickstart.rst:125
msgid "**Head height**  : 2.0 mm"
msgstr ""

#: ../../cadquery/doc/quickstart.rst:126
msgid "**Clearance Hole** : 2.4 mm"
msgstr ""

#: ../../cadquery/doc/quickstart.rst:127
msgid "**CounterBore diameter** : 4.4 mm"
msgstr ""

#: ../../cadquery/doc/quickstart.rst:129
msgid "The centers of these holes should be 6mm from the edges of the block. And, we want the block to work correctly even when the block is re-sized by the user."
msgstr ""

#: ../../cadquery/doc/quickstart.rst:132
msgid "**Don't tell me** we'll have to repeat the steps above 8 times to get counter-bored holes? Good news!-- we can get the job done with just a few lines of code. Here's the code we need:"
msgstr ""

#: ../../cadquery/doc/quickstart.rst:162
msgid "After clicking the Render button to re-execute the model, you should see something like this:"
msgstr ""

#: ../../cadquery/doc/quickstart.rst:167
msgid "There is quite a bit going on here, so let's break it down a bit."
msgstr ""

#: ../../cadquery/doc/quickstart.rst:169
msgid "**Line 5** creates a new padding parameter that decides how far the holes are from the edges of the plate."
msgstr ""

#: ../../cadquery/doc/quickstart.rst:171
msgid "**Lines 14-15** selects the top-most face of the block, and creates a workplane on the top of that face, which we'll use to define the centers of the holes in the corners."
msgstr ""

#: ../../cadquery/doc/quickstart.rst:174
msgid "**Line 16** draws a rectangle 12mm smaller than the overall length and width of the block, which we will use to locate the corner holes. We'll use the vertices ( corners ) of this rectangle to locate the holes. The rectangle's center is at the center of the workplane, which in this case coincides with the center of the bearing hole."
msgstr ""

#: ../../cadquery/doc/quickstart.rst:178
msgid "There are a couple of things to note about this line:"
msgstr ""

#: ../../cadquery/doc/quickstart.rst:180
msgid "The :py:meth:`cadquery.Workplane.rect` function draws a rectangle.  **forConstruction=True** tells CadQuery that this rectangle will not form a part of the solid, but we are just using it to help define some other geometry."
msgstr ""

#: ../../cadquery/doc/quickstart.rst:183
msgid "Unless you specify otherwise, a rectangle is drawn with its center on the current workplane center-- in this case, the center of the top face of the block. So this rectangle will be centered on the face."
msgstr ""

#: ../../cadquery/doc/quickstart.rst:186
msgid "**Line 17** selects the vertices of the rectangle, which we will use for the centers of the holes. The :py:meth:`cadquery.Workplane.vertices` function selects the corners of the rectangle."
msgstr ""

#: ../../cadquery/doc/quickstart.rst:189
msgid "**Line 18** uses the cboreHole function to draw the holes. The :py:meth:`cadquery.Workplane.cboreHole` function is a handy CadQuery function that makes a counterbored hole. Like most other CadQuery functions, it operates on the values on the stack.  In this case, since we selected the four vertices before calling the function, the function operates on each of the four points-- which results in a counterbore hole at each of the rectangle corners."
msgstr ""

#: ../../cadquery/doc/quickstart.rst:197
msgid "Filleting"
msgstr ""

#: ../../cadquery/doc/quickstart.rst:199
msgid "Almost done. Let's just round the corners of the block a bit. That's easy, we just need to select the edges and then fillet them:"
msgstr ""

#: ../../cadquery/doc/quickstart.rst:202
msgid "We can do that using the preset dictionaries in the parameter definition:"
msgstr ""

#: ../../cadquery/doc/quickstart.rst:233
msgid "**Line 19** To grab the right edges, the :py:meth:`cadquery.Workplane.edges` selects all of the edges that are parallel to the Z axis (\"\\|Z\")."
msgstr ""

#: ../../cadquery/doc/quickstart.rst:236
msgid "**Line 20** fillets the edges using the :py:meth:`cadquery.Workplane.fillet` method."
msgstr ""

#: ../../cadquery/doc/quickstart.rst:238
msgid "The finished product looks like this:"
msgstr ""

#: ../../cadquery/doc/quickstart.rst:243
msgid "Exporting"
msgstr ""

#: ../../cadquery/doc/quickstart.rst:245
msgid "If you want to fabricate a physical object you need to export the result to STL or DXF. Additionally, exporting as STEP for post-processing in another CAD tool is also possible."
msgstr ""

#: ../../cadquery/doc/quickstart.rst:247
msgid "This can be easily accomplished using the :py:meth:`cadquery.exporters.export` function:"
msgstr ""

#: ../../cadquery/doc/quickstart.rst:284
msgid "Done!"
msgstr ""

#: ../../cadquery/doc/quickstart.rst:286
msgid "You just made a parametric, model that can generate pretty much any bearing pillow block with <30 lines of code."
msgstr ""

#: ../../cadquery/doc/quickstart.rst:290
msgid "Want to learn more?"
msgstr ""

#: ../../cadquery/doc/quickstart.rst:292
msgid "The :ref:`examples` contains lots of examples demonstrating cadquery features"
msgstr ""

#: ../../cadquery/doc/quickstart.rst:293
msgid "The :ref:`apireference` is a good overview of language features grouped by function"
msgstr ""

#: ../../cadquery/doc/quickstart.rst:294
msgid "The :ref:`classreference` is the hard-core listing of all functions available."
msgstr ""
